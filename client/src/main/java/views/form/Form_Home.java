/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views.form;

import views.model.Model_Card;
import views.model.StatusType;
import views.swing.ScrollBar;
import java.awt.Color;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Account;
import remote.AccountService;
import remote.ClassService;
import remote.EnrollService;
import remote.StudentService;
import remote.TeacherService;

/**
 *
 * @author vieta
 */
public class Form_Home extends javax.swing.JPanel {

    private Registry registry;
    private StudentService studentService;
    private TeacherService teacherService;
    private ClassService classService;
    private AccountService accountService;

    private int qtClass = 0;
    private int qtStudent = 0;
    private int qtTeacher = 0;

    public Form_Home() {
        initComponents();
        init();
        initAtributtes();
        addItemToCard(qtClass, qtStudent, qtTeacher);
        setupTable();
    }

    private void init() {
        try {
            registry = LocateRegistry.getRegistry("localhost", 2025);
            studentService = (StudentService) registry.lookup("StudentService");
            teacherService = (TeacherService) registry.lookup("TeacherService");
            classService = (ClassService) registry.lookup("ClassService");
            accountService = (AccountService) registry.lookup("AccountService");
            System.out.println("Kết nối RMI thành công!");
        } catch (RemoteException | java.rmi.NotBoundException e) {
            System.err.println("Lỗi kết nối RMI: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void initAtributtes() {
        try {
            if (classService != null) {
                qtClass = classService.getClassCount();
            }
            if (studentService != null) {
                qtStudent = studentService.getStudentCount();
            }
            if (teacherService != null) {
                qtTeacher = teacherService.getTeacherCount();
            }
        } catch (RemoteException e) {
            System.err.println("Lỗi khi lấy số lượng: " + e.getMessage());
        }
    }

    private void addItemToCard(int qtClass, int qtStudent, int qtTeacher) {
        card1.setData(new Model_Card(
                new ImageIcon(getClass().getResource("/views/icon/stock.png")),
                "Số lượng lớp học", String.valueOf(qtClass), "Thông số được ước tính đến nay"
        ));
        card2.setData(new Model_Card(
                new ImageIcon(getClass().getResource("/views/icon/profit.png")),
                "Số lượng sinh viên", String.valueOf(qtStudent), "Thông số được ước tính đến nay"
        ));
        card3.setData(new Model_Card(
                new ImageIcon(getClass().getResource("/views/icon/flag.png")),
                "Số lượng giảng viên", String.valueOf(qtTeacher), "Thông số được ước tính đến nay"
        ));
    }

    private void setupTable() {
        spTable.setVerticalScrollBar(new ScrollBar());
        spTable.getVerticalScrollBar().setBackground(Color.WHITE);
        spTable.getViewport().setBackground(Color.WHITE);

        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);

        try {
            List<Account> accounts = accountService.getAllAccounts(); // Lấy danh sách tài khoản từ server
            List<StatusType> statuses = Arrays.asList(StatusType.ACTIVE);
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0); // Xóa dữ liệu cũ trước khi nạp mới

            for (Account account : accounts) {
                model.addRow(new Object[]{
                    account.getTeacherName(),
                    account.getEmail(),
                    account.getRoleName(), // Hiển thị tên vai trò thay vì ID
                    "25 Apr,2018",
                    statuses.get(new Random().nextInt(statuses.size()))
                });
            }
        } catch (RemoteException e) {
            JOptionPane.showMessageDialog(this, "Lỗi tải danh sách tài khoản: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        card1 = new views.component.Card();
        card2 = new views.component.Card();
        card3 = new views.component.Card();
        panelBorder1 = new views.swing.PanelBorder();
        jLabel1 = new javax.swing.JLabel();
        spTable = new javax.swing.JScrollPane();
        table = new views.swing.Table();
        header2 = new views.component.Header();

        setPreferredSize(new java.awt.Dimension(1000, 550));

        jPanel1.setLayout(new java.awt.GridLayout(1, 0, 15, 0));

        card1.setColor1(new java.awt.Color(142, 142, 250));
        card1.setColor2(new java.awt.Color(123, 123, 245));
        jPanel1.add(card1);

        card2.setColor1(new java.awt.Color(186, 123, 247));
        card2.setColor2(new java.awt.Color(167, 94, 236));
        jPanel1.add(card2);

        card3.setColor1(new java.awt.Color(241, 208, 62));
        card3.setColor2(new java.awt.Color(211, 164, 81));
        jPanel1.add(card3);

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(114, 108, 108));
        jLabel1.setText("Danh sách tài khoản");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Họ và tên", "Email", "Loại tài khoản", "Ngày tham gia", "Status"
            }
        ));
        spTable.setViewportView(table);

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spTable, javax.swing.GroupLayout.DEFAULT_SIZE, 963, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(spTable, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(header2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private views.component.Card card1;
    private views.component.Card card2;
    private views.component.Card card3;
    private views.component.Header header2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private views.swing.PanelBorder panelBorder1;
    private javax.swing.JScrollPane spTable;
    private views.swing.Table table;
    // End of variables declaration//GEN-END:variables
}
